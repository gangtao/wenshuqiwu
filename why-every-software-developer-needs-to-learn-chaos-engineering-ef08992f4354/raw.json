[{
  "tag": "H1",
  "text": "Further Reading",
  "translation": "进一步阅读"
}, {
  "tag": "P",
  "text": "If you think this is something you would like to try and know more about, check out the following content:",
  "translation": "如果您认为这是您想尝试了解的更多信息，请查看以下内容："
}, {
  "tag": "OL",
  "texts": ["http://www.oreilly.com/webops-perf/free/chaos-engineering.csp", "http://principlesofchaos.org/", "https://www.gremlin.com/the-discipline-of-chaos-engineering/"],
  "translations": ["http://www.oreilly.com/webops-perf/free/chaos-engineering.csp", "http://principlesofchaos.org/", "https://www.gremlin.com/the-discipline-of-chaos-engineering/"]
}, {
  "tag": "H1",
  "text": "Be Careful",
  "translation": "小心"
}, {
  "tag": "P",
  "text": "Do remember to first understand and only then implement a chaos experiment. You are responsible for your own actions.",
  "translation": "请记住要先理解，然后才能进行混沌实验。 您应对自己的行为负责。"
}, {
  "tag": "H1",
  "text": "How Do I Design My Chaos Experiment?",
  "translation": "如何设计混沌实验？"
}, {
  "tag": "P",
  "text": "As the book suggests, chaos can be designed by considering the following steps:",
  "translation": "如书中所建议，可以通过考虑以下步骤来设计混乱："
}, {
  "tag": "OL",
  "texts": ["Pick a hypothesis.", "Choose the scope of the experiment.", "Identify the metrics you’re going to watch.", "Notify the organization.", "Run the experiment.", "Analyze the results.", "Increase the scope.", "Automate."],
  "translations": ["选择一个假设。", "选择实验范围。", "确定您要观看的指标。", "通知组织。", "运行实验。", "分析结果。", "增加范围。", "自动化。"]
}, {
  "tag": "P",
  "text": "The steps and details might vary system-to-system, but overall design should be pretty much around the above-mentioned steps.",
  "translation": "步骤和细节可能因系统而异，但总体设计应围绕上述步骤进行。"
}, {
  "tag": "H1",
  "text": "Advanced Principles of Chaos Engineering",
  "translation": "混沌工程高级原理"
}, {
  "tag": "P",
  "text": "As per http://principlesofchaos.org/, the following are the advanced principles of chaos engineering.",
  "translation": "根据http://principlesofchaos.org/，以下是混沌工程学的高级原理。"
}, {
  "tag": "H2",
  "text": "1. Build a hypothesis around steady-state behavior",
  "translation": "1.建立关于稳态行为的假设"
}, {
  "tag": "P",
  "text": "Focus on the measurable output of a system, rather than the internal attributes of the system.",
  "translation": "关注于系统的可测量输出，而不是系统的内部属性。"
}, {
  "tag": "P",
  "text": "By focusing on systemic behavior patterns during experiments, chaos verifies that the system does work, rather than trying to validate how it works.",
  "translation": "通过关注实验过程中的系统行为模式，混乱可以验证系统是否有效，而不是试图验证其工作方式。"
}, {
  "tag": "H2",
  "text": "2. Vary real-world events",
  "translation": "2.改变现实世界中的事件"
}, {
  "tag": "P",
  "text": "Chaos variables reflect real-world events. Prioritize events either by potential impact or estimated frequency.",
  "translation": "混沌变量反映了现实世界中的事件。 通过潜在影响或估计频率对事件进行优先级排序。"
}, {
  "tag": "P",
  "text": "Consider events that correspond to hardware failures, like servers dying, software failures like malformed responses, and non-failure events like a spike in traffic or a scaling event.",
  "translation": "考虑与硬件故障（例如服务器死机），软件故障（例如格式错误的响应）以及非故障事件（如流量高峰或扩展事件）相对应的事件。"
}, {
  "tag": "P",
  "text": "Any event capable of disrupting a steady state is a potential variable in a chaos experiment.",
  "translation": "在混乱的实验中，任何能够破坏稳态的事件都是潜在的变量。"
}, {
  "tag": "H2",
  "text": "3. Run experiments in production",
  "translation": "3.在生产中进行实验"
}, {
  "tag": "P",
  "text": "Systems behave differently, depending on the environment and traffic patterns. Chaos strongly prefers to experiment directly with production traffic.",
  "translation": "系统的行为会有所不同，具体取决于环境和流量模式。 混沌强烈希望直接对生产流量进行试验。"
}, {
  "tag": "H2",
  "text": "4. Automate experiments to run continuously",
  "translation": "4.自动化实验以连续运行"
}, {
  "tag": "P",
  "text": "Chaos experiments should run continuously rather than one-time or periodic checks.",
  "translation": "混沌实验应该连续进行，而不是一次性或定期检查。"
}, {
  "tag": "H2",
  "text": "5. Minimize blast radius",
  "translation": "5.最小化爆炸半径"
}, {
  "tag": "P",
  "text": "Experimenting in production has the potential to cause unnecessary customer pain. So, chaos engineers need to make sure that the implications of the experiments should be manageable.",
  "translation": "在生产中进行试验有可能导致不必要的客户痛苦。 因此，混乱的工程师需要确保实验的影响是可管理的。"
}, {
  "tag": "H1",
  "text": "Should We Practice Chaos Engineering?",
  "translation": "我们应该练习混沌工程吗？"
}, {
  "tag": "P",
  "text": "Quoting from the book:",
  "translation": "从书中引用："
}, {
  "tag": "P",
  "text": "“Is your system resilient to real-world events such as service failures and network latency spikes?”",
  "translation": "“您的系统是否能够应对诸如服务故障和网络延迟峰值之类的现实事件？”"
}, {
  "tag": "P",
  "text": "If the answer is no, you need to practice chaos engineering. You should have strong monitoring systems in place to understand the state of your system.",
  "translation": "如果答案是否定的，则需要练习混沌工程。 您应该拥有强大的监视系统来了解系统状态。"
}, {
  "tag": "P",
  "text": "As we are moving more and more towards micro-services based architecture, practicing chaos engineering is becoming essential.",
  "translation": "随着我们越来越趋向于基于微服务的体系结构，实践混沌工程变得至关重要。"
}, {
  "tag": "H1",
  "text": "Who Practices Chaos Engineering?",
  "translation": "谁来实践混沌工程？"
}, {
  "tag": "P",
  "text": "There have been communities set up, like http://chaos.community/, focused on this engineering discipline.",
  "translation": "已经建立了专门针对该工程学科的社区，例如http://chaos.community/。"
}, {
  "tag": "P",
  "text": "The community shows that the practitioners of chaos engineering are in companies like Google, Amazon, Uber, Yahoo!, Dropbox, Visa, New Relic, etc. And the number is growing every day.",
  "translation": "社区显示，混沌工程的从业者来自Google，Amazon，Uber，Yahoo！，Dropbox，Visa，New Relic等公司，而且这一数字每天都在增长。"
}, {
  "tag": "P",
  "text": "The practice is not limited to software-based companies but it is growing in areas like defense, manufacturing, farming, medical, financial, etc.",
  "translation": "这种做法不仅限于基于软件的公司，而且还在国防，制造，农业，医疗，金融等领域不断发展。"
}, {
  "tag": "H1",
  "text": "Chaos Experiments",
  "translation": "混沌实验"
}, {
  "tag": "P",
  "text": "Now, let’s try to understand what chaos experiments look like.",
  "translation": "现在，让我们尝试了解什么是混乱的实验。"
}, {
  "tag": "OL",
  "texts": ["If you are running Hadoop environments, taking down a few nodes of the Hadoop cluster or even generating chaos by taking down high-availability components.", "On Kafka clusters, deleting messages from a particular partition or topic.", "Making system cloaks out of sync.", "Eating out CPU/memory on Elasticsearch clusters, NoSQL clusters, web servers, etc.", "Injecting chaos in functions."],
  "translations": ["如果您正在运行Hadoop环境，请关闭Hadoop集群的几个节点，甚至通过关闭高可用性组件而造成混乱。", "在Kafka群集上，从特定分区或主题中删除消息。", "使系统伪装不同步。", "在Elasticsearch群集，NoSQL群集，Web服务器等上消耗CPU /内存。", "在功能上注入混乱。"]
}, {
  "tag": "P",
  "text": "These are some of the examples and proper study of your system will help identify experiments for your system.",
  "translation": "这些是一些示例，对系统的正确研究将有助于确定系统的实验。"
}, {
  "tag": "H1",
  "text": "Testing vs. Chaos Engineering",
  "translation": "测试与混沌工程"
}, {
  "tag": "P",
  "text": "Most of the time, a good testing plan talks about load testing, security testing, and functionality testing at load.",
  "translation": "大多数时候，一个好的测试计划会讨论负载测试，安全性测试和负载时的功能测试。"
}, {
  "tag": "P",
  "text": "Unfortunately, we only do these tests on non-production environments. We test only non-production environments and hope that the system behaves the same in the production environment.",
  "translation": "不幸的是，我们仅在非生产环境中进行这些测试。 我们仅测试非生产环境，并希望系统在生产环境中的行为相同。"
}, {
  "tag": "P",
  "text": "This is the place where chaos engineering tries to prepare us, by doing experiments as close to the production environment as possible, or sometimes even in production environments.",
  "translation": "这是混乱工程试图通过尽可能接近生产环境甚至有时在生产环境中进行实验来准备我们的地方。"
}, {
  "tag": "P",
  "text": "Another difference between testing and chaos engineering is that the outcome of chaos engineering brings new knowledge about the system that even developers or testers might not be aware of.",
  "translation": "测试和混乱工程之间的另一个区别是，混乱工程的结果带来了有关系统的新知识，即使开发人员或测试人员也可能不知道。"
}, {
  "tag": "H1",
  "text": "Why Every Software Developer Needs to Learn Chaos Engineering",
  "translation": "为什么每个软件开发人员都需要学习混沌工程"
}, {
  "tag": "H2",
  "text": "Chaos engineering is the discipline of experimenting on a software system in production",
  "translation": "混沌工程是在生产中的软件系统上进行实验的学科"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/1*PIrXG7XzvHAg1B8Ti2qi1w.jpeg?q=20",
  "caption": "Photo by Markus Spiske on Unsplash",
  "type": "image",
  "file": "1*PIrXG7XzvHAg1B8Ti2qi1w.jpeg"
}, {
  "tag": "P",
  "text": "Being a technologist, responsible for managing large scale systems, you always need to think about the continuity, security, and manageability of the system.",
  "translation": "作为负责管理大型系统的技术人员，您始终需要考虑系统的连续性，安全性和可管理性。"
}, {
  "tag": "P",
  "text": "Recently I have been spending a lot of time to better understand how to put up a proper Disaster Recovery (DR) and Business Continuity Plan (BCP) for a large distributed system.",
  "translation": "最近，我花了很多时间来更好地了解如何为大型分布式系统制定适当的灾难恢复（DR）和业务连续性计划（BCP）。"
}, {
  "tag": "P",
  "text": "My quest to know more about the topic ended up in getting introduced to a new stream of engineering that every system should adopt — Chaos Engineering!",
  "translation": "我寻求更多有关该主题的追求最终导致被介绍给每个系统都应采用的新工程流-混沌工程！"
}, {
  "tag": "P",
  "text": "I ended up reading a free book from O’Reilly’s called Chaos Engineering — Building Confidence in System Behaviour through Experiments. I had been aware of Netflix’s Chaos Monkey for many years but I chose to never say that I was building another Netflix, until I ended up reading this book.",
  "translation": "最后，我读了O'Reilly的一本名为《混沌工程》的免费书—通过实验建立了系统行为的信心。 我已经知道Netflix的Chaos Monkey已有很多年了，但是我选择永远不要说自己正在建立另一个Netflix，直到最终读完这本书。"
}, {
  "tag": "P",
  "text": "The book starts with a very interesting definition of chaos engineering —",
  "translation": "这本书从对混沌工程的非常有趣的定义开始-"
}, {
  "tag": "P",
  "text": "“Chaos Engineering is the discipline of experimenting on a distributed system to build confidence in the system’s capability to withstand turbulent conditions in production.” — Principles of Chaos",
  "translation": "“混沌工程学是在分布式系统上进行实验的学科，目的是建立对该系统在生产中承受动荡条件的能力的信心。” —混沌原理"
}, {
  "tag": "P",
  "text": "Another very simple, yet meaningful definition from Gremlin is:",
  "translation": "Gremlin的另一个非常简单但有意义的定义是："
}, {
  "tag": "P",
  "text": "“Breaking things on purpose to build more resilient systems!”",
  "translation": "“故意破坏事物以构建更具弹性的系统！”"
}, {
  "tag": "P",
  "text": "I never thought chaos could be used to bring discipline.",
  "translation": "我从没想过混乱可以用来带来纪律。"
}, {
  "tag": "P",
  "text": "In a distributed system, you will never be able to prevent all the failures but you can always be prepared for it. As you experiment on your infrastructure, you get to know the weaknesses of the systems and can better plan to avoid those.",
  "translation": "在分布式系统中，您将永远无法避免所有故障，但始终可以为此做好准备。 在基础架构上进行试验时，您会了解系统的弱点，并可以更好地计划避免这些弱点。"
}, {
  "tag": "P",
  "text": "By now, you must be wondering — How is chaos engineering different from testing? Let’s try to understand this better.",
  "translation": "现在，您一定想知道-混沌工程与测试有何不同？ 让我们尝试更好地理解这一点。"
}, {
  "tag": "PRE",
  "text": "(本文翻译自Tanmay Deshpande的文章《Why Every Software Developer Needs to Learn Chaos Engineering》，参考：https://medium.com/better-programming/why-every-software-developer-needs-to-learn-chaos-engineering-ef08992f4354)",
  "translation": "（本文翻译自Tanmay Deshpande的文章，《为什么每个软件开发人员都需要学习混沌工程》，参考：https：//medium.com/better-programming/why-every-software-developer-needs-to-learn-chaos- engineering-ef08992f4354）"
}]