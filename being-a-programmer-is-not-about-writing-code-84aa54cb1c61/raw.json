[{
  "tag": "P",
  "text": "Check out my Medium series, The Happy Programmer. It’s kind of like an eBook and works best on the mobile app. You can subscribe to it and get updates when more screens are added.",
  "translation": "看看我的中型系列节目《快乐程序员》。 有点像电子书，在移动应用上效果最佳。 您可以订阅它，并在添加更多屏幕时获取更新。"
}, {
  "tag": "P",
  "text": "I hope this was useful. It’s certainly a simplified take on things, and done to highlight an important issue that I see often while mentoring.",
  "translation": "我希望这是有用的。 当然，这是对事情的简化，旨在突出我在指导期间经常看到的重要问题。"
}, {
  "tag": "P",
  "text": "Thank you for reading, and enjoy the journey!",
  "translation": "感谢您的阅读，旅途愉快！"
}, {
  "tag": "P",
  "text": "So what can be done?",
  "translation": "那该怎么办呢？"
}, {
  "tag": "P",
  "text": "Spend some time building software from scratch.",
  "translation": "花一些时间从头开始构建软件。"
}, {
  "tag": "P",
  "text": "Move away from application frameworks and libraries in your personal projects and build things yourself.",
  "translation": "在您的个人项目中远离应用程序框架和库，并自行构建事物。"
}, {
  "tag": "P",
  "text": "Design your own class hierarchies. Build a set of reusable modules to solve a particular problem. Work directly with databases. Create a web app from scratch. Parse JSON by hand. Get involved in open source projects. Learn functional programming. Create some algorithms. Automate some common tasks. Make some cool things happen. Take things apart and put them back together again. Don’t be afraid of making a mess.",
  "translation": "设计自己的类层次结构。 构建一组可重用的模块来解决特定问题。 直接使用数据库。 从头开始创建Web应用程序。 手动解析JSON。 参与开源项目。 学习函数式编程。 创建一些算法。 自动执行一些常见任务。 使一些很酷的事情发生。 拆开东西再放回去。 不要害怕弄乱。"
}, {
  "tag": "P",
  "text": "Learn from Martin Fowler, Kent Beck, Dave Thomas.",
  "translation": "向马丁·福勒，肯特·贝克，戴夫·托马斯学习。"
}, {
  "tag": "P",
  "text": "Whatever works for the space you’re in. Find what works for you. Push your limits, list the areas you’re aware of but don’t understand, study and talk with others. Keep learning.",
  "translation": "一切适合您所处的空间。找到适合您的空间。 突破极限，列出您知道但不能理解，学习和与他人交谈的领域。 保持学习。"
}, {
  "tag": "P",
  "text": "Having this experience will feed in to your work with application frameworks and make you a better programmer.",
  "translation": "拥有这些经验将有助于您使用应用程序框架，并使您成为更好的程序员。"
}, {
  "tag": "P",
  "text": "It doesn’t become clear to you unless you’re an experienced programmer. Even then, you might not have thought about it. But being a programmer is not about writing code. You learn to write code, but after that you stop thinking about it. It just happens. It’s not what programming is about.",
  "translation": "除非您是经验丰富的程序员，否则您不清楚。 即使那样，您也可能没有考虑过。 但是，成为一名程序员与编写代码无关。 您将学习编写代码，但之后便不再考虑它。 它只是发生。 这与编程无关。"
}, {
  "tag": "P",
  "text": "Allow me an analogy to help illustrate this, if you will.",
  "translation": "如果可以的话，请允许我进行类比以帮助说明这一点。"
}, {
  "tag": "P",
  "text": "Experienced chess players know that the first thing you learn is how to move the pieces around the board. You learn that the bishop moves diagonally, the king moves one space in any direction, knights are funny and move in a special way etc.",
  "translation": "经验丰富的棋手知道，您学习的第一件事是如何在棋盘上移动棋子。 您了解到主教沿对角线移动，国王向任意方向移动一个空间，骑士很有趣，并且以特殊方式移动等。"
}, {
  "tag": "P",
  "text": "There are some caveats to the way the pieces move around the board, and it takes some time to learn. But after you’ve played a few times, you don’t think about it very much. After a while, you don’t think about it at all.",
  "translation": "棋子在棋盘上的移动方式有一些警告，需要花费一些时间来学习。 但是玩了几次之后，您就不会考虑太多了。 一段时间后，您根本不会考虑它。"
}, {
  "tag": "P",
  "text": "Once you get past the beginner stage, you no longer need to think about the way the pieces move around the board. You no longer need to think about the mechanics of the game. You just know where the pieces can move when you look at them. You don’t need to think, “can the bishop move more than one space?”",
  "translation": "一旦超过了初学者阶段，您就不再需要考虑各个部分在董事会中的移动方式。 您不再需要考虑游戏的机制。 当您查看它们时，您只知道它们可以移动到哪里。 您无需思考，“主教可以移动一个以上的空间吗？”"
}, {
  "tag": "P",
  "text": "These thoughts have to leave for you to advance to being an intermediate level player. There is too much else to think about at the intermediate level for you to still be thinking about the mechanics. You have to just get that.",
  "translation": "这些想法必须让您晋升为中级玩家。 在中级水平上有太多其他要考虑的内容，您仍然需要考虑机械原理。 您必须得到那个。"
}, {
  "tag": "P",
  "text": "Once you get past being a beginner, playing chess is not about how the pieces are moved around the board. Playing the game is about strategy, tactics, concentration, study, memory, endurance, commitment, politics, and interpersonal skills to name a few.",
  "translation": "一旦您成为初学者，下棋就不再是棋子在棋盘上的移动方式。 玩游戏是关于战略，战术，专注力，学习，记忆力，耐力，承诺，政治和人际交往能力等。"
}, {
  "tag": "P",
  "text": "Programming is no different, although some of the skills are. Once you have been programming for some time, often years, you will no longer need to think about how the syntax works. Any changes or new developments in the syntax will be quickly absorbed.",
  "translation": "编程没有什么不同，尽管其中有些技能是。 一旦进行了一段时间（通常是数年）的编程，您就不再需要考虑语法的工作原理。 语法上的任何更改或新发展都将很快被吸收。"
}, {
  "tag": "P",
  "text": "Programming becomes about the structure of the code you are working with, the interfaces you design that enable modularity and make your code reusable, how you will separate out the responsibilities in order to best support the needs of your application and not lock in approaches that could hinder future developments. How you will make it testable.",
  "translation": "编程涉及以下方面：您正在使用的代码的结构，所设计的使模块模块化并使代码可重用的接口，如何分离职责以最好地支持应用程序的需求，而不是锁定可能的方法。 阻碍未来的发展。 您将如何使其可测试。"
}, {
  "tag": "P",
  "text": "And the learning process never ends.",
  "translation": "学习过程永无止境。"
}, {
  "tag": "P",
  "text": "Application frameworks take care of the vast majority of these decisions for you, and can make it easy to be sloppy with those decisions within the code that you do need to design, as they are limited in scope and protected by the structure of the application framework as a whole.",
  "translation": "应用程序框架会为您处理这些决策中的绝大部分，并且使您确实需要设计的代码中的那些决策变得草率，因为它们的范围有限且受应用程序框架结构的保护 整体上"
}, {
  "tag": "P",
  "text": "Sure, you can still make a big mess of it, and this is not to suggest that application frameworks remove all of the complexity, or that working with them isn’t programming. The point here is to illustrate that there is a tendency to shield you from the hard stuff, which can lead to avoiding learning it. Being aware of this means it can be addressed.",
  "translation": "当然，您仍然可以将其弄得一团糟，这并不意味着应用程序框架消除了所有复杂性，或者与它们一起使用不是编程。 这里的要点是说明存在一种使您免受困难之苦的趋势，这可能导致您避免学习它。 意识到这一点意味着可以解决它。"
}, {
  "tag": "P",
  "text": "When working in an application framework, programming becomes about being aware of the decisions made by the framework, and how best to work within them. Being able to have made those decisions yourself, and understanding why, helps you to work with them more effectively, especially as your applications grow in size.",
  "translation": "当在应用程序框架中工作时，编程就成为了了解框架所做出的决定以及如何在其中进行最佳工作的意识。 能够自己做出这些决定并理解原因，可以帮助您更有效地与他们合作，尤其是随着应用程序规模的扩大。"
}, {
  "tag": "H1",
  "text": "Being a Programmer is Not About Writing Code",
  "translation": "成为程序员与编写代码无关"
}, {
  "tag": "P",
  "text": "Being a programmer is not about knowing how to write code and learning an application framework. Application frameworks have a tendency to lead newcomers to miss the point, and stall their journey just as it’s getting interesting.",
  "translation": "成为一名程序员并不是要知道如何编写代码和学习应用程序框架。 应用程序框架趋向于使新来者错过这一点，并在变得有趣时停止他们的旅程。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/0*RCElhAd8Bq60z8Cb?q=20",
  "caption": "Photo by Aaron Burden on Unsplash",
  "type": "image",
  "file": "0*RCElhAd8Bq60z8Cb"
}, {
  "tag": "P",
  "text": "Writing code with a framework is a great place to start, and can achieve impressive results. However, the relative ease of working within a framework, and perhaps especially the impressiveness of the results, can make the next steps seem daunting.",
  "translation": "使用框架编写代码是一个很好的起点，并且可以实现令人印象深刻的结果。 但是，在框架内相对容易地工作，尤其是结果的令人印象深刻，可能会使后续步骤显得艰巨。"
}, {
  "tag": "P",
  "text": "It’s important to remember that application frameworks provide a structure that is designed, maintained and cared for by intermediate and advanced level programmers.",
  "translation": "重要的是要记住，应用程序框架所提供的结构是由中级和高级程序员设计，维护和维护的。"
}, {
  "tag": "P",
  "text": "They are taking care of the gnarly details of the application, so that only the code for a particular implementation needs to be written. You don’t need to write the code that makes that type of application a reality.",
  "translation": "他们正在处理应用程序的繁琐细节，因此只需要编写特定实现的代码。 您无需编写使这种类型的应用程序成为现实的代码。"
}, {
  "tag": "P",
  "text": "This is all well and good. Awesome in fact. I love frameworks and work with them all the time. I’ve designed and developed frameworks. They are useful, important and helpful.",
  "translation": "这一切都很好。 真棒。 我喜欢框架，并一直与他们合作。 我已经设计并开发了框架。 它们是有用，重要和有用的。"
}, {
  "tag": "P",
  "text": "But it’s important to remember that the hardest part of the work is being done for you. You are essentially configuring an existing application, adding the behavioral details for a particular implementation.",
  "translation": "但重要的是要记住，工作中最难的部分正在为您完成。 您实质上是在配置现有应用程序，并为特定的实现添加行为细节。"
}, {
  "tag": "P",
  "text": "In terms of your learning process, this can be detrimental.",
  "translation": "就您的学习过程而言，这可能是有害的。"
}, {
  "tag": "P",
  "text": "Application frameworks, along with other high level libraries, are so high level, that the results can lead newcomers to feel that they are programming, while it is more accurate to say they are configuring the work of others. They are newcomers riding on the shoulders of more experienced programmers.",
  "translation": "应用程序框架以及其他高级库是如此之高，以至于结果可以使新手感到自己正在编程，而说他们正在配置其他人的工作则更为准确。 他们是新手，骑在经验丰富的程序员的肩膀上。"
}, {
  "tag": "P",
  "text": "Forgetting that, or not being aware of it, can lead to giving yourself credit for the programming to produce an app, when in reality you did only a small portion of the work, and it was the easiest part.",
  "translation": "忘记或不了解它，可能会导致您对制作应用程序的编程赞不绝口，而实际上，您只做一小部分工作，而这是最简单的部分。"
}, {
  "tag": "P",
  "text": "This can lead to a perception that it is an end to the journey of becoming a programmer, while in truth it is only the beginning.",
  "translation": "这可能会导致人们认为这是成为程序员的旅程的终点，而实际上这仅仅是开始。"
}, {
  "tag": "PRE",
  "text": "(本文翻译自Nigel B. Peck的文章《Being a Programmer is Not About Writing Code》，参考：https://medium.com/swlh/being-a-programmer-is-not-about-writing-code-84aa54cb1c61)",
  "translation": "（本文翻译自Nigel B. Peck的文章，《成为程序员与编写代码无关》，参考：https：//medium.com/swlh/being-a-programmer-is-not-about-writing-code-84aa54cb1c61 ）"
}]