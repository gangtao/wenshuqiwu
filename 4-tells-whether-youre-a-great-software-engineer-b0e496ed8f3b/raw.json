[{
  "tag": "H2",
  "text": "10 Books Every Programmer Should Read",
  "translation": "每个程序员都应该阅读的10本书"
}, {
  "tag": "H3",
  "text": "Reading is a vital skill in finding a desirable programming job",
  "translation": "阅读是找到理想编程工作的一项至关重要的技能"
}, {
  "tag": "H1",
  "text": "Taking Ownership and Beyond",
  "translation": "拥有所有权和超越"
}, {
  "tag": "P",
  "text": "Every executive or manager wants to carve the ownership ideology deep inside every team, for good reason. If workers take ownership and treat their code or products as if it belongs to them personally, they will take special care and consideration.",
  "translation": "每位高管或经理都希望有充分的理由在每个团队中深入挖掘主人翁意识。 如果工人拥有所有权并视其代码或产品为个人所有，则他们将受到特别的照顾和考虑。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/0*iJ6cXgCavyJwFobh?q=20",
  "caption": "Photo by ROOM on Unsplash",
  "type": "image",
  "file": "0*iJ6cXgCavyJwFobh"
}, {
  "tag": "P",
  "text": "When working for a small team inside a big company, one can quickly lose the ownership feeling. It’s crucial to treat any codebase as if the next person to deal with the code will be a serial killer who knows where you live. Jokes aside, I think ownership is a powerful concept. If you're given a task, treat that task as though it serves you directly. In the grand scheme of things, you want to work in a well-known company, that changes the world for the better and leaves a dent in the universe. By taking ownership and responsibility, you’re directly signaling your values and beliefs.",
  "translation": "在大公司内部的一个小团队工作时，很快就会失去主人翁感。 至关重要的是，对待任何代码库都必须让下一个处理代码的人成为知道您居住地的连环杀手。 除了玩笑，我认为所有权是一个有力的概念。 如果您收到任务，则将其视为直接为您服务。 按照宏伟的计划，您想在一家知名的公司工作，这将使世界变得更好，并在整个宇宙中留下痕迹。 承担所有权和承担责任，就可以直接表达您的价值观和信念。"
}, {
  "tag": "H2",
  "text": "10 Books Every Programmer Should Read",
  "translation": "每个程序员都应该阅读的10本书"
}, {
  "tag": "H3",
  "text": "Reading is a vital skill in finding a desirable programming job",
  "translation": "阅读是找到理想编程工作的一项至关重要的技能"
}, {
  "tag": "P",
  "text": "If you’re new to JavaScript and want to learn the language, I recommend starting with reading books combined with building things. Start with the “A Smarter Way to Learn JavaScript” book and here’s a list of fun apps to build.",
  "translation": "如果您是JavaScript的新手，并且想学习该语言，则建议您先阅读书籍，并结合进行构建。 从“更聪明的JavaScript学习方式”一书开始，这里列出了一些有趣的应用程序。"
}, {
  "tag": "P",
  "text": "Thanks for reading, I hope you learned something new. Happy coding!",
  "translation": "感谢您的阅读，希望您学到了一些新知识。 编码愉快！"
}, {
  "tag": "H2",
  "text": "The Secret to Being a Top Developer Is Building Things! Here’s a List of Fun Apps to Build!",
  "translation": "成为顶级开发人员的秘诀在于构建事物！ 这是要构建的有趣应用的列表！"
}, {
  "tag": "H1",
  "text": "Don’t Give Up When Things Get Hard (Be Willing to Put the Hours In)",
  "translation": "遇到困难时不要放弃（愿意花时间）"
}, {
  "tag": "P",
  "text": "One day you will face a challenge that you have no business with. It shocks and overwhelms you. You ask yourself “I have to do what?!”. Stay calm, don’t panic. As a software engineer, I can assure you this is all part of the ride. Feeling overwhelmed is actually a good thing, it’s how we evolve. To grow, we have to face new and harder challenges — it’s the only way. When the time comes, don’t be afraid to take the leap forward.",
  "translation": "有一天，您将面临与您毫无业务往来的挑战。 它使您感到震惊和不知所措。 您问自己“我必须做什么？！”。 保持镇定，不要惊慌。 作为软件工程师，我可以向您保证这是所有工作的一部分。 感到不知所措实际上是一件好事，这就是我们的发展方式。 为了成长，我们必须面对新的和更艰巨的挑战-这是唯一的方法。 时机成熟，不要害怕向前迈进。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/0*K2E5KJlu5ky8WdJN?q=20",
  "caption": "Photo by Kristopher Roller on Unsplash",
  "type": "image",
  "file": "0*K2E5KJlu5ky8WdJN"
}, {
  "tag": "P",
  "text": "As with any skill, you have to put in the hours. If it’s worth doing, it’s worth doing great. Don’t just do things for the sake of it, do it because you want to show everyone how great your work is. If you’re asked to do X, do X and add some sugar on top of it. A good way to put the hours in is just simply to build stuff, build anything, just build it. If you lack ideas, here’s a fun list of apps to build:",
  "translation": "与任何技能一样，您必须投入大量时间。 如果值得去做，那就值得去做。 不要只是为了做某事而做，是因为您想向所有人展示您的工作多么出色。 如果要求您做X，请做X并在上面加上一些糖。 花费时间的一种好方法就是简单地构建东西，构建任何东西，构建它。 如果您缺乏想法，这里有一个有趣的应用程序列表："
}, {
  "tag": "H2",
  "text": "The Secret to Being a Top Developer Is Building Things! Here’s a List of Fun Apps to Build!",
  "translation": "成为顶级开发人员的秘诀在于构建事物！ 这是要构建的有趣应用的列表！"
}, {
  "tag": "H1",
  "text": "Ability to Teach and Learn",
  "translation": "教与学的能力"
}, {
  "tag": "P",
  "text": "Having the ability to lift your teammates is invaluable. You might be extremely proficient in X, while your teammate might be experienced in Y. The ability to exchange knowledge is often looked down upon. Great teams put their minds together. Greater problems require great teams.",
  "translation": "能够提升队友的能力非常宝贵。 您可能非常精通X，而您的队友则可能具有Y的经验。经常会忽略交换知识的能力。 伟大的团队齐心协力。 更大的问题需要优秀的团队。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/60/0*2QwMHrWR_pV2NT8K?q=20",
  "caption": "Photo by Kimberly Farmer on Unsplash",
  "type": "image",
  "file": "0*2QwMHrWR_pV2NT8K"
}, {
  "tag": "P",
  "text": "If you want to become a truly great engineer, you should be able to swallow your ego and status. Wise senior engineers will often tell you they learn new things from junior engineers all the time. Junior engineers are eager to prove themselves and learn the latest and coolest programming tooling, only to demonstrate the tools to the team. A wise engineer considers and accepts any information from any source. Leave your dogmas at the door.",
  "translation": "如果您想成为一名真正的伟大工程师，那么您应该能够吞并自己的自我和地位。 明智的高级工程师经常会告诉您，他们一直在向初级工程师学习新知识。 初级工程师渴望证明自己并学习最新最酷的编程工具，只是向团队展示工具。 明智的工程师会考虑并接受来自任何来源的任何信息。 把教条留在门口。"
}, {
  "tag": "P",
  "text": "Amazing developers who lack team skills stagnate in roles, while perhaps less technically adept devs, who are more personable and more able to sell their ideas, flourish.",
  "translation": "缺乏团队技能的惊人开发人员在角色中停滞不前，而技术娴熟的开发人员却更具人性化，并且更有能力推销自己的想法，他们的工作蓬勃发展。"
}, {
  "tag": "H1",
  "text": "Fun to Work With",
  "translation": "一起工作很有趣"
}, {
  "tag": "P",
  "text": "You’re the first to arrive at the office at 7:30 AM and sit down to sip your morning coffee while reading the latest scandals around the globe, with the occasional small dose of programming and startup news. You feel good and feel ready to crush the day. You open up Github and start to review your previous pull request, only to find your teammate nit-picking on your variable naming, semi-colon insertions, and other trivialities, while completely ignoring the feature you implemented without any issues.",
  "translation": "您是第一个在早上7:30到达办公室，坐下来喝杯咖啡的人，一边阅读全球最新的丑闻，还偶尔看到一些编程和创业新闻。 您会感觉良好，并准备好度过美好的一天。 您打开Github并开始查看您之前的拉取请求，却发现您的队友对您的变量命名，分号插入和其他琐事一无所知，而完全忽略了您实现的功能而没有任何问题。"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/40/0*NitxQqN-lPqClQvU?q=20",
  "caption": "Photo by Allie Smith on Unsplash",
  "type": "image",
  "file": "0*NitxQqN-lPqClQvU"
}, {
  "tag": "P",
  "text": "Don’t be the guy to annoy your teammates. It’s fine to have standards, but such standards should be clearly defined and agreed on. If you argue about preferences, use prettier with ESLint. The two previous tools let teams agree on a standard while maintaining coding flavor.",
  "translation": "不要惹恼队友。 有标准是可以的，但是应该明确定义这些标准并达成共识。 如果您对首选项有争议，请对ESLint使用更漂亮的样式。 之前的两个工具使团队可以在保持编码风格的同时就标准达成一致。"
}, {
  "tag": "P",
  "text": "Being a fun person to work with is absolutely crucial to being a great software engineer. Many engineers think that their code speaks for themselves. While we all admire great code, don’t be a jerk, especially if you’re a senior engineer. A great engineer should be fun to work with, non-lethargic, and ready to take on challenges. Not everyone can do it, but at least try. I’m often lethargic myself, but I try not to be. No matter how technically brilliant you are, you’ll always be limited by your ability to communicate.",
  "translation": "成为一个有趣的人对于成为一名出色的软件工程师至关重要。 许多工程师认为他们的代码可以说明一切。 尽管我们都赞美出色的代码，但不要混蛋，特别是如果您是高级工程师。 一位出色的工程师应该很有趣，不致伤脑筋，并且乐于接受挑战。 不是每个人都能做到，但至少要尝试。 我经常会昏昏欲睡，但我尽量不要。 无论您在技术上有多出色，都将始终受到沟通能力的限制。"
}, {
  "tag": "P",
  "text": "“A rational person can find peace by cultivating indifference to things outside of their control.” — Naval Ravikant",
  "translation": "“一个理性的人可以通过对自己无法控制的事物漠不关心，从而找到和平。” —海军拉维坎特"
}, {
  "tag": "H1",
  "text": "Four Ways to Know if You're a Great Software Engineer",
  "translation": "四种方法来确定您是否是出色的软件工程师"
}, {
  "tag": "H2",
  "text": "What’s the universal measurement of a great software engineer?",
  "translation": "一位优秀的软件工程师的普遍评价是什么？"
}, {
  "tag": "FIGURE",
  "image": "https://miro.medium.com/max/40/0*cVQOceFLe2kGykpN?q=20",
  "caption": "Photo by Howard Lawrence B on Unsplash",
  "type": "image",
  "file": "0*cVQOceFLe2kGykpN"
}, {
  "tag": "FIGURE",
  "type": "code"
}, {
  "tag": "P",
  "text": "Software engineering is the art of crafting beautiful software. What is beautiful software? Some might say beautiful software looks aesthetically pleasing and feels intuitive, others might agree that beautiful software equals coherent and logical code. There’s no right or wrong here, being a good software engineer is up to interpretation. Here are my key takes on what makes someone a great engineer.",
  "translation": "软件工程是制作精美软件的艺术。 什么是漂亮的软件？ 有些人可能会说漂亮的软件在美学上看起来令人愉悦并且感觉直观，而另一些人可能会认为漂亮的软件等于连贯的逻辑代码。 在这里没有对与错，成为一名优秀的软件工程师取决于解释。 这是我成为一名出色工程师的关键要素。"
}]